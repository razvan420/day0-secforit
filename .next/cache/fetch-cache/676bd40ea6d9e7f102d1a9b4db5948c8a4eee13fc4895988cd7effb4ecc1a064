{"kind":"FETCH","data":{"headers":{"accept-ranges":"bytes","access-control-allow-origin":"*","access-control-expose-headers":"ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO, X-GitHub-Request-Id, Deprecation, Sunset","cache-control":"public, max-age=60, s-maxage=60","content-encoding":"gzip","content-security-policy":"default-src 'none'","content-type":"application/json; charset=utf-8","date":"Thu, 12 Jun 2025 14:03:42 GMT","etag":"W/\"e96cbbb0616eb2004ed74ff51de7b0b97f372e0de2845238a8ee597c55e417f3\"","last-modified":"Wed, 11 Jun 2025 19:59:55 GMT","link":"<https://api.github.com/advisories?per_page=10&sort=published&direction=desc&after=Y3Vyc29yOnYyOpK0MjAyNS0wNi0xMVQxNDo0NjozN1rOAASPuA%3D%3D>; rel=\"next\"","referrer-policy":"origin-when-cross-origin, strict-origin-when-cross-origin","server":"github.com","strict-transport-security":"max-age=31536000; includeSubdomains; preload","transfer-encoding":"chunked","vary":"Accept,Accept-Encoding, Accept, X-Requested-With","x-content-type-options":"nosniff","x-frame-options":"deny","x-github-api-version-selected":"2022-11-28","x-github-media-type":"github.v3; format=json","x-github-request-id":"D976:3A0BD8:FD2B42:102275F:684ADE3E","x-ratelimit-limit":"60","x-ratelimit-remaining":"58","x-ratelimit-reset":"1749740622","x-ratelimit-resource":"core","x-ratelimit-used":"2","x-xss-protection":"0"},"body":"","status":200,"url":"https://api.github.com/advisories?per_page=10&sort=published&direction=desc"},"revalidate":1800,"tags":[]}